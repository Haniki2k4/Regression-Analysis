# -*- coding: utf-8 -*-
"""Practice4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aXW2FPDxlblolimBLYCmKeSlTdbb3EdO
"""

#install.packages(c("tidyverse", "broom", "MASS", "AER", "car", "sandwich", "lmtest", "ggplot2"))
library(readr)
library(tidyverse)
library(MASS)
library(car)
library(ggplot2)

data = read.csv('data4.csv')

data$HoatDongTheChat <- factor(data$HoatDongTheChat, levels = c("It", "TrungBinh", "Nhieu"), ordered = TRUE)
data$SuDungThucPham <- factor(data$SuDungThucPham, levels = c("It", "TrungBinh", "Nhieu"), ordered = TRUE)

data$TienSuTramCamGiaDinh <- as.factor(data$TienSuTramCamGiaDinh)
data$TramCam <- as.factor(data$TramCam)

str(data)
cat('\n Thống kê mô tả')
options(width = 100)

# Exclude binary variables from summary
binary_vars = c("TienSuTramCamGiaDinh", "TramCam")
non_binary_data = data[, !(names(data) %in% binary_vars)]
summary(non_binary_data)

# ---------------------------
# 1. Mô hình Poisson: đơn biến (SoLanTuTu ~ TramCam)
# ---------------------------
model_poisson <- glm(SoLanTuTu ~ TramCam, family = poisson(link = "log"), data = data)
summary_model <- summary(model_poisson)
cat("\n--- Mô hình Poisson đơn biến (SoLanTuTu ~ TramCam) ---\n")
print(summary_model)

coef_model <- coef(summary(model_poisson))
beta_tramcam <- coef_model["TramCam1","Estimate"]
p_tramcam <- coef_model["TramCam1","Pr(>|z|)"]

cat("Hệ số TramCam1 =", beta_tramcam, ", p-value =", p_tramcam, "\n")

# Tính Rate Ratio (RR) = exp(beta)
RR_tramcam <- exp(beta_tramcam)
cat("Rate Ratio TramCam1 =", RR_tramcam, "\n")

# Giá trị AIC của mô hình
AIC_model_poisson <- AIC(model_poisson)
cat("AIC của mô hình đơn biến =", AIC_model_poisson, "\n")

"""# Nhận xét

- Hệ số hồi quy của TramCam1 là 1.711, với p-value là 0.007 < 0.05 nên hệ số có ý nghĩa thống kê.

- RR = 5.538, khi biến TramCam1 tăng 1 đơn vị thì SoLanTuTu tăng 5.5 lần.

- AIC = 131.185
"""

# ---------------------------
# 2. Mô hình Poisson: đa biến (tất cả biến độc lập)
# ---------------------------
poisson_multi <- glm(SoLanTuTu ~ TramCam + Tuoi + GioHoc + GioNgu +
            MoiQuanHeXaHoi + TienSuTramCamGiaDinh +
            ApLucHocTap + HoatDongTheChat + SuDungThucPham +
            ThuNhapGiaDinh + SuDungMangXaHoi,
          family = poisson(link = "log"),
          data = data)

summary(poisson_multi)

# Xác định biến có ý nghĩa thống kê (p < 0.05)
coef_poisson_multi <- coef(summary(poisson_multi))
significant_vars <- rownames(coef_poisson_multi)[coef_poisson_multi[,4] < 0.05]
cat("Biến có ý nghĩa thống kê (p < 0.05):", significant_vars, "\n")

# So sánh AIC
AIC_multi <- AIC(poisson_multi)
cat("AIC mô hình đa biến =", AIC_multi, "\n")
cat("AIC mô hình đơn biến =", AIC_model_poisson, "\n")

# Tính RR cho TramCam1 và GioNgu (nếu có ý nghĩa)
RR <- exp(coef(poisson_multi))
cat("Rate Ratio:\n")
print(RR[c("TramCam1","GioNgu")])

# RR của ApLucHocTap
cat("Rate Ratio của ApLucHocTap =", RR["ApLucHocTap"], "\n")

"""# Nhận xét

- Các biến có ý nghĩa thông kê là TramCam1 và GioNgu với p-value lần lượt là 0.037 và 0.017

- Dựa trên giá trị AIC của 2 mô hình, mô hình đơn biến có giá trị nhỏ hơn là tốt hơn

- RR TramCam1 thể hiện người bị trầm cảm sẽ có SoLanTuTu cao gấp 7.5 lần người không trầm cảm trong cùng điều kiện sinh hoạt.

- RR GioNgu thể hiện khi giờ ngủ tăng 1 đơn vị thì SoLanTuTu giảm còn 62% (giảm 38%) so với trước đó

- RR ApLucHocTap là 1.147, khi áp lực học tập tăng 1 đơn vị thì SoLanTuTu tăng khoảng 14% nhưng với giá trị p là 0.194 thì kết quả này không có ý nghĩa
"""

#---------------------------------------------
# 3. Kiểm tra Overdispersion
#---------------------------------------------
res_dev <- deviance(poisson_multi)
df_res <- df.residual(poisson_multi)
ratio <- res_dev / df_res
cat("Residual Deviance/DF =", ratio, "\n")

if(ratio > 1.5){
  cat("→ Có dấu hiệu overdispersion\n")
} else {
  cat("→ Không có dấu hiệu overdispersion\n")
}

"""# Nhận xét

- Giá trị Residual Deviance / DF của mô hình là 0.23 < 1. Mô hình không có dấu hiệu overdispersion

- Mô hình hiện tại có thể được coi là phù hợp với dữ liệu

- Tuy nhiên với giá trị trên, cần lưu ý vì mô hình có ít biến thiên hơn so với kỳ vòng của Poisson

"""

#---------------------------------------------
# 4. Kiểm tra tính tuyến tính (LOESS)
#---------------------------------------------

ggplot(data, aes(x = ApLucHocTap, y = SoLanTuTu)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", se = FALSE, color = "blue") +
  labs(title = "Mối quan hệ giữa ApLucHocTap và SoLanTuTu (LOESS)")

ggplot(data, aes(x = GioNgu, y = SoLanTuTu)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess", se = FALSE, color = "blue") +
  labs(title = "Mối quan hệ giữa ApLucHocTap và SoLanTuTu (LOESS)")

data$log_rate <- predict(model_nb, type = "link")
vars_cont <- c("GioHoc", "GioNgu", "ThuNhapGiaDinh", "SuDungMangXaHoi")

# Vẽ biểu đồ LOESS cho từng biến liên tục
for (v in vars_cont) {
  p <- ggplot(data, aes_string(x = v, y = "log_rate")) +
    geom_point(alpha = 0.5) +
    geom_smooth(method = "loess", se = FALSE, color = "blue") +
    labs(title = paste("LOESS:", v, "và log-rate"),
         x = v, y = "log-rate (fitted)")
  print(p)
}

#---------------------------------------------
# 4. Kiểm tra tính tuyến tính (LOESS)
#---------------------------------------------

# Vẽ biểu đồ LOESS cho từng biến liên tục
vars_cont <- c("GioHoc", "GioNgu", "ThuNhapGiaDinh", "ApLucHocTap")

data$log_rate <- predict(poisson_multi, type = "link")

for (v in vars_cont) {
    p <- ggplot(data, aes_string(x = v, y = "log_rate")) +
      geom_point(alpha = 0.5) +
      geom_smooth(method = "loess", se = FALSE, color = "blue") +
      labs(title = paste("LOESS:", v, "và log-rate"),
           x = v, y = "log-rate (fitted)")
    print(p)
}

"""# Nhận xét

- Đường LOESS cong cho thấy mối quan hệ không hoàn toàn tuyến tính giữa ApLucHocTap và SoLanTuTu

- Phương pháp xử lý được đề xuất bao gồm: spline, phân loại biến và thay đổi mô hình
"""

#---------------------------------------------
# 5. Kiểm tra đa cộng tuyến
#---------------------------------------------

vif_values <- vif(poisson_multi)
print(vif_values)

if(any(vif_values > 5)){
  cat("Có biến đa cộng tuyến cao (VIF > 5). Cần xem xét loại bỏ hoặc gộp biến.\n")
} else {
  cat("Không có đa cộng tuyến cao (VIF > 5).\n")
}

"""# Nhận xét

- Có thể thấy không có biến nào có VIF cao (>5). Không có đa cộng tuyến giữa các biến độc lập.

"""